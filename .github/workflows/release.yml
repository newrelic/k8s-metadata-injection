name: Release

on:
  release:
    types: [prereleased, released]

jobs:
  release-docker:
    name: Release docker & config
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: newrelic/k8s-metadata-injection
      S3_PATH: s3://nr-downloads-main/infrastructure_agent
    steps:
      - name: Generate docker image version from git tag
        run: |
          DOCKER_IMAGE_TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')
          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_ENV

      - name: Validate git and docker tag format
        run: |
          echo "${{ github.event.release.tag_name }}" | grep -E '^v[0-9.]*[0-9]$'
          echo "$DOCKER_IMAGE_TAG" | grep -E '^[0-9.]*[0-9]$'

      - if: ${{ github.event.release.prerelease }}
        run: |
          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG-pre" >> $GITHUB_ENV
          echo "S3_PATH=$S3_PATH/test" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: Build container image
        run: |
          make all
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.FSI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FSI_DOCKERHUB_TOKEN }}
      - name: Push docker image
        run: |
          docker push "$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG"
      - name: Tag and push docker :latest image
        if: ${{ ! github.event.release.prerelease }}
        run: |
          docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:latest
          docker push "$DOCKER_IMAGE_NAME:latest"

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.COREINT_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.COREINT_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload configuration files to https://download.newrelic.com
        run: |
          make deploy/combined.yaml
          aws s3 cp deploy/combined.yaml $S3_PATH/integrations/kubernetes/k8s-metadata-injection-$DOCKER_IMAGE_TAG.yaml
          aws s3 cp deploy/combined.yaml $S3_PATH/integrations/kubernetes/k8s-metadata-injection-latest.yaml
          aws s3 cp deploy/newrelic-metadata-injection.yaml $S3_PATH/integrations/kubernetes/k8s-metadata-injection-custom-certs-$DOCKER_IMAGE_TAG.yaml
          aws s3 cp deploy/newrelic-metadata-injection.yaml $S3_PATH/integrations/kubernetes/k8s-metadata-injection-custom-certs-latest.yaml
