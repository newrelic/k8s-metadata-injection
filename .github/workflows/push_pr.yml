name: Lint, Build, E2E Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: make lint
  build:
    name: Build integration for
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm64, arm ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Build integration
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          make compile

  chart-lint:
    name: Helm chart Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: helm/chart-testing-action@v2.2.1

      - name: Lint charts
        run: ct --config .github/ct.yaml lint --debug --all

      - name: Check for changed installable charts
        id: list-changed
        run: |
          changed=$(ct --config .github/ct.yaml list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run helm unit tests
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm plugin install https://github.com/quintush/helm-unittest
          for chart in $(ct --config .github/ct.yaml list-changed); do
            if [ -d "$chart/tests/" ]; then
              helm unittest -3 $chart
            else
                echo "No unit tests found for $chart"
            fi
          done

  test:
    name: Unit tests
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Run unit tests
        run: make test
  e2e-kubernetes:
    name: Kubernetes E2E tests
    needs: [ test ]
    runs-on: ubuntu-latest
    env:
      E2E_KUBERNETES_VERSION: ${{ matrix.k8s-version }}
      DOCKER_BUILDKIT: '1' # Setting DOCKER_BUILDKIT=1 ensures TARGETOS and TARGETARCH are populated
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        k8s-version: [ "v1.16.15", "v1.17.17", "v1.18.16", "v1.19.8", "v1.20.4", "v1.21.3", "v1.22.0" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - run: make e2e-test
